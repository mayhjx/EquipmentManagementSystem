@page
@using EquipmentManagementSystem.Models
@model EquipmentManagementSystem.Areas.Identity.Pages.Account.UserManagement.IndexModel

@inject RoleManager<IdentityRole> roleManager
@inject UserManager<User> userManager


@{
    ViewData["Title"] = "用户管理";
}


<div class="card">
    <h4 class="card-header">
        用户
        <a asp-page="Create">
            <input type="button" class="btn btn-outline-primary btn-sm" value="新增用户" style="margin-left: 10px;" />
        </a>
    </h4>
    <div class="card-body">
        <table id="index" class="table">
            <thead>
                <tr>
                    <td>@Html.DisplayNameFor(model => model.users[0].Group)</td>
                    <td>@Html.DisplayNameFor(model => model.users[0].Name)</td>
                    <td>@Html.DisplayNameFor(model => model.users[0].Number)</td>
                    <td>@Html.DisplayNameFor(model => model.users[0].Email)</td>
                    <td>角色</td>
                    <td></td>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.users)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(model => item.Group)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.Number)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.Email)
                        </td>
                        @{
                            var role = await userManager.GetRolesAsync(item);
                            <td>@role.FirstOrDefault()</td>
                        }
                        <td>
                            <a asp-page="Edit" asp-route-name="@item.UserName"><i class="fas fa-user-edit fa-lg" aria-hidden="true"></i></a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script src="~/plugins/datatables-responsive/js/dataTables.responsive.min.js"></script>
    <script src="~/plugins/datatables-responsive/js/responsive.bootstrap4.min.js"></script>
    <script>
        $(function () {
            $('#index').DataTable({
                paging: true,
                lengthChange: true,
                searching: true,
                ordering: true,
                orderMulti: true,
                info: true,
                autoWidth: false,
                responsive: true,
                processing: true,
                stateSave: true,
                deferRender: true,
                language: {
                    "emptyTable": "没有数据", //没有数据时要显示的字符串
                    "info": "当前 _START_ 条到 _END_ 条 共 _TOTAL_ 条",//左下角的信息，变量可以自定义，到官网详细查看
                    "infoEmpty": "无记录",//当没有数据时，左下角的信息
                    "infoFiltered": "(从 _MAX_ 条记录过滤)",//当表格过滤的时候，将此字符串附加到主要信息
                    "infoPostFix": "",//在摘要信息后继续追加的字符串
                    "thousands": ",",//千分位分隔符
                    "lengthMenu": "每页 _MENU_ 条记录",//用来描述分页长度选项的字符串
                    "loadingRecords": "加载中...",//用来描述数据在加载中等待的提示字符串 - 当异步读取数据的时候显示
                    "processing": "处理中...",//用来描述加载进度的字符串
                    "search": "搜索：",//用来描述搜索输入框的字符串
                    "zeroRecords": "没有找到",//当没有搜索到结果时，显示
                    "paginate": {
                        "first": "首页",
                        "previous": "上一页",
                        "next": "下一页",
                        "last": "尾页"
                    }
                },
            });
        })
    </script>
}