@page
@model EquipmentManagementSystem.Pages.ReportSystem.ReportingModel
@{
    ViewData["Title"] = "";
}

<div class="card">
    <div class="card-header">
        <h4>查询</h4>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-12">
                <form method="post" class="form-inline ">
                    <label asp-for="Search.Year" class="control-label mr-2"></label>
                    <input asp-for="Search.Year" type="number" min="1900" max="9999" class="form-control mr-2" required />

                    <label asp-for="Search.InstrumentId" class="control-label mr-2"></label>
                    <select asp-for="Search.InstrumentId" class="custom-select select2" required>
                        <option value="" hidden disabled selected>---请选择---</option>
                        @foreach (var id in Model.Search.InstrumentSelectList)
                        {
                            <option value="@id">@id</option>
                        }
                    </select>
                    <input type="submit" class="btn btn-primary ml-2" value="查询" />
                </form>
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-6">
                @*使用时长直方图*@
                <canvas id="usage-chart" height="400" width="600" aria-label="使用时长直方图" role="img"></canvas>
            </div>
            <div class="col-6">
                @*故障时长直方图*@
                <canvas id="malfunction-chart" height="400" width="600" aria-label="故障时长直方图" role="img"></canvas>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/plugins/chart.js/Chart.bundle.min.js"></script>
    <script>
        $(document).ready(function () {
            let instrumentId = @(Json.Serialize(Model.Search.InstrumentId));

            if (instrumentId == null) {
                return;
            }

            let year = @(Json.Serialize(Model.Search.Year));
            let monthlyUsageHour = @(Json.Serialize(Model.MonthlyUsageHour));
            let monthlyMalfunctionHour = @(Json.Serialize(Model.MonthlyMalfunctionHour));

            let labels = new Array();
            for (i = 1; i <= 12; i++) {
                labels[i - 1] = i;
            }

            var ctx = document.getElementById('usage-chart').getContext('2d');
            var usageChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: labels,
                    datasets: [{
                        label: `${instrumentId}`,
                        backgroundColor: 'rgb(65, 105, 225)',
                        borderColor: 'rgb(65, 105, 225)',
                        data: monthlyUsageHour,
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    title: {
                        display: true,
                        text: `${year} 年设备使用时长`,
                        fontSize: 16
                    },
                    scales: {
                        xAxes: [{
                            ticks: {
                                beginAtZero: false
                            },
                            scaleLabel: {
                                display: true,
                                labelString: "月份",
                            }
                        }],
                        yAxes: [{
                            ticks: {
                                beginAtZero: true
                            },
                            scaleLabel: {
                                display: true,
                                labelString: "小时",
                            }
                        }]
                    }
                }
            });

            var ctx = document.getElementById('malfunction-chart').getContext('2d');
            var malfunctionChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: labels,
                    datasets: [{
                        label: `${instrumentId}`,
                        backgroundColor: 'rgb(65, 105, 225)',
                        borderColor: 'rgb(65, 105, 225)',
                        data: monthlyMalfunctionHour,
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    title: {
                        display: true,
                        text: `${year} 年设备故障时长`,
                        fontSize: 16
                    },
                    scales: {
                        xAxes: [{
                            ticks: {
                                beginAtZero: false
                            },
                            scaleLabel: {
                                display: true,
                                labelString: "月份",
                            }
                        }],
                        yAxes: [{
                            ticks: {
                                beginAtZero: true
                            },
                            scaleLabel: {
                                display: true,
                                labelString: "小时",
                            }
                        }]
                    }
                }
            });
        });
    </script>
}
