@page
@model EquipmentManagementSystem.Pages.ReportSystem.ReportingModel
@{
    ViewData["Title"] = "报表系统";
}

<div class="card d-print-none">
    <div class="card-header">
        <h4>查询条件</h4>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-12">
                <form method="post">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-row">
                        <div class="col-xl-auto col-sm-6 my-0">
                            <label asp-for="Search.Category" class="control-label"></label>
                            <span asp-validation-for="Search.Category" class="text-danger"></span>
                            <select asp-for="Search.Category" class="custom-select select2" asp-items="@Html.GetEnumSelectList<EquipmentManagementSystem.Pages.ReportSystem.ReportingModel.Category>()">
                            </select>
                        </div>
                        <div class="col-xl-auto col-sm-6 my-0">
                            <label asp-for="Search.BeginTime" class="control-label"></label>
                            <span asp-validation-for="Search.BeginTime" class="text-danger"></span>
                            <input asp-for="Search.BeginTime" class="form-control" />
                        </div>
                        <div class="col-xl-auto col-sm-6 my-0">
                            <label asp-for="Search.EndTime" class="control-label"></label>
                            <span asp-validation-for="Search.EndTime" class="text-danger"></span>
                            <input asp-for="Search.EndTime" class="form-control" />
                        </div>
                        <div class="col-xl-auto col-sm-6 my-0">
                            <label asp-for="Search.Platform" class="control-label"></label>
                            <span asp-validation-for="Search.Platform" class="text-danger"></span>
                            <select id="platform" asp-for="Search.Platform" asp-items="@Model.PlatformSelectList" class="custom-select select2">
                                <option value="">---请选择---</option>
                            </select>
                        </div>
                        <div class="col-xl-auto col-sm-6 my-0">
                            <label asp-for="Search.Group" class="control-label"></label>
                            <span asp-validation-for="Search.Group" class="text-danger"></span>
                            <select id="group" asp-for="Search.Group" asp-items="@Model.GroupSelectList" class="custom-select select2">
                                <option value="">---请选择---</option>
                            </select>
                        </div>
                        <div class="col-xl-auto col-sm-6 my-0">
                            <label asp-for="Search.Project" class="control-label"></label>
                            <span asp-validation-for="Search.Project" class="text-danger"></span>
                            <select id="project" asp-for="Search.Project" asp-items="@Model.ProjectSelectList" class="custom-select select2">
                                <option value="">---请选择---</option>
                            </select>
                        </div>
                        <div class="col-xl-auto col-sm-6 my-0">
                            <label asp-for="Search.Instrument" class="control-label"></label>
                            <span asp-validation-for="Search.Instrument" class="text-danger"></span>
                            <select id="instrument" asp-for="Search.Instrument" asp-items="@Model.InstrumentSelectList" class="custom-select select2">
                                <option value="">---请选择---</option>
                            </select>
                        </div>
                        <div class="col-xl-auto col-sm-6 pt-2">
                            <input type="submit" class="btn btn-primary mt-4 btn-block" value="查询" />
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@if (Model.UsageRecords != null)
{
    <div class="card">
        <div class="card-header d-print-none">
            <h3 class="card-title">
                查询结果
            </h3>
            <div class="card-tools">
                <ul class="nav nav-pills ml-auto">
                    <li class="nav-item">
                        <a class="nav-link active" href="#data-chart" data-toggle="tab">使用时长柱状图</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#data" data-toggle="tab">使用记录</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#usage-datagrid" data-toggle="tab">使用记录表</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#maintenance-datagrid" data-toggle="tab">维护记录表</a>
                    </li>
                </ul>
            </div>
        </div>
        <div class="card-body">
            <div class="tab-content p-0">
                @*使用时长直方图*@
                <div class="chart tab-pane active" id="data-chart" style="position: relative;">
                    <div class="chartjs-size-monitor">
                        <div class="chartjs-size-monitor-expand"><div class=""></div></div>
                        <div class="chartjs-size-monitor-shrink"><div class=""></div></div>
                    </div>
                </div>
                @*使用记录*@
                <div class="tab-pane " id="data" style="position: relative; ">
                    <div class="table-responsive">
                        <table id="export" class="table table-hover text-nowrap">
                            <thead>
                                <tr>
                                    <th>
                                        @Html.DisplayNameFor(model => model.UsageRecords[0].InstrumentId)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.UsageRecords[0].ProjectName)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.UsageRecords[0].ColumnNumber)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.UsageRecords[0].ColumnPressure)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.UsageRecords[0].ColumnTwoNumber)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.UsageRecords[0].ColumnTwoPressure)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.UsageRecords[0].PressureUnit)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.UsageRecords[0].BeginTimeOfTest)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.UsageRecords[0].SampleNumber)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.UsageRecords[0].TestNumber)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.UsageRecords[0].VacuumDegree)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.UsageRecords[0].VacuumDegreeUnit)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.UsageRecords[0].BlankSignal)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.UsageRecords[0].TestSignal)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.UsageRecords[0].EndTime)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.UsageRecords[0].Creator)
                                    </th>
                                    <th>检测时长(h)</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.UsageRecords)
                                {
                                    <tr>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.InstrumentId)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.ProjectName)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.ColumnNumber)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.ColumnPressure)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.ColumnTwoNumber)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.ColumnTwoPressure)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.PressureUnit)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.BeginTimeOfTest)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.SampleNumber)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.TestNumber)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.VacuumDegree)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.VacuumDegreeUnit)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.BlankSignal)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.TestSignal)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.EndTime)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Creator)
                                        </td>
                                        <td class="time">
                                            @((item.EndTime - item.BeginTimeOfTest).GetValueOrDefault().TotalHours.ToString("f1"))
                                        </td>
                                    </tr>
                                }
                            </tbody>
                            <tfoot>
                                <tr>
                                    <td class="text-bold">总时长(h)</td>
                                    <td id="total" class="text-bold"></td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
                @*使用记录表*@
                <div class="tab-pane" id="usage-datagrid" style="position: relative; ">
                    <button id="exportToPDF" class="btn btn-outline-primary float-right no-print" style="margin-right:10px;" type="button" title="建议在Google Chrome浏览器中进行打印">
                        <i class="fa fa-print"></i> 打印预览
                    </button>
                    @{
                        // 可以用NameValueCollection优化
                        // https://docs.microsoft.com/en-us/dotnet/api/system.collections.specialized.namevaluecollection?view=netcore-3.1
                        var columnType = new Dictionary<char, string>();
                        var carrier = new Dictionary<char, string>();
                        var ionSource = new Dictionary<char, string>();
                        var detector = new Dictionary<char, string>();

                        foreach (var item in Model.UsageRecords)
                        {
                            AddKeyValueToDic(columnType, item.Project.ColumnType);
                            AddKeyValueToDic(ionSource, item.Project.IonSource);
                            AddKeyValueToDic(carrier, item.Project.Carrier);
                            AddKeyValueToDic(detector, item.Project.Detector);
                        }

                        void AddKeyValueToDic(Dictionary<char, string> dic, string value)
                        {
                            if (value != null && !dic.ContainsValue(value))
                            {
                                // A, B, C, ...
                                char key = (char)(dic.Keys.Count + 65);
                                dic.Add(key, value);
                            }
                        }

                        // 色谱柱和真空度压力单位，载体类型
                        string pressureUnit = "", vacuumUnit = "", carrierType = "";
                        if (Model.UsageRecords.Count > 1)
                        {
                            pressureUnit = Model.UsageRecords.Last().PressureUnit.ToString();
                            vacuumUnit = Model.UsageRecords.Last().VacuumDegreeUnit.ToString();
                            carrierType = Model.UsageRecords.Last().Instrument.ID.Contains("YZ") ? "Liquid" : "Gas";
                        }

                        string GetKeyFromValue(Dictionary<char, string> dic, string value)
                        {
                            string key = string.Empty;
                            if (value == null) return string.Empty;

                            foreach (KeyValuePair<char, string> kvp in dic)
                            {
                                if (kvp.Value == value)
                                {
                                    return kvp.Key.ToString();
                                }
                            }
                            return key;
                        }
                    }
                    <table id="usageDataGrid" class="table table-sm table-borderless">
                        <thead>
                            <tr>
                                <th colspan="13" class="h5 text-center">
                                    色谱质谱联用设备使用通用记录表<br />
                                    UHPLC, LC-MS/MS, GC-MS Use Form
                                </th>
                            </tr>
                            <tr>
                                <th colspan="7" class="text-left">仪器编号No.：@(Model.Search?.Instrument ?? "_____________")&nbsp; 仪器型号Model：@(Model.InstrumentModel?? "_____________")</th>
                                <th colspan="6" class="text-right">表号Form：KM-SOP0314. ___ .01</th>
                            </tr>
                            <tr class="">
                                <th class="border border-dark text-center align-middle">
                                    开始时间<br />
                                    Startup Time
                                </th>
                                <th class="border border-dark text-center align-middle">
                                    结束时间<br />
                                    Shutdown Time
                                </th>
                                <th class="border border-dark text-center align-middle">
                                    检测项目<br />
                                    Test Item
                                </th>
                                <th class="border border-dark text-center align-middle text-break">
                                    色谱柱编号/类型<br />
                                    Column Number/Type
                                </th>
                                <th class="border border-dark align-middle">
                                    初始压力<br />
                                    Pressure<br />
                                    <i class="far fa-@(pressureUnit == "Mpa" ? "check-" : "")square" aria-hidden="true"></i> Mpa
                                    <i class="far fa-@(pressureUnit == "Bar" ? "check-" : "")square" aria-hidden="true"></i> Bar
                                    <i class="far fa-@(pressureUnit == "Psi" ? "check-" : "")square" aria-hidden="true"></i> Psi
                                </th>
                                <th class="border border-dark align-middle">
                                    真空度<br />
                                    Vacuum<br />
                                    <i class="far fa-@(vacuumUnit == "torr" ? "check-" : "")square" aria-hidden="true"></i> torr
                                    <i class="far fa-@(vacuumUnit == "Mpa" ? "check-" : "")square" aria-hidden="true"></i> Mpa
                                </th>
                                <th class="border border-dark text-center align-middle">
                                    空白<br />
                                    Blank Signal
                                </th>
                                <th class="border border-dark text-center align-middle">
                                    Test信号<br />
                                    Test Signal
                                </th>
                                <th class="border border-dark align-middle">
                                    <i class="far fa-@(carrierType == "Liquid" ? "check-" : "")square" aria-hidden="true"></i>
                                    流动相<br />
                                    Liquid Phase<br />
                                    <i class="far fa-@(carrierType == "Gas" ? "check-" : "")square" aria-hidden="true"></i>
                                    载气<br />
                                    Carrier Gas
                                </th>
                                <th class="border border-dark text-center align-middle">
                                    检测器<br />
                                    Detector
                                </th>
                                <th class="border border-dark text-center align-middle">
                                    离子源<br />
                                    Ion Source
                                </th>
                                <th class="border border-dark text-center align-middle">
                                    操作者<br />
                                    Operator
                                </th>
                                <th class="border border-dark text-center align-middle">
                                    备注<br />
                                    Remark
                                </th>
                            </tr>
                        </thead>
                        <tfoot>
                            <tr>
                                <td colspan="13" class="border border-dark">
                                    备注：
                                    <ol class="pb-0 m-0">
                                        <li>
                                            色谱柱类型：@string.Join(" ", columnType).Replace('[', ' ').Replace(']', ' ').Replace(',', '.')
                                        </li>
                                        <li>
                                            流动相/载气类型：@string.Join(" ", carrier).Replace('[', ' ').Replace(']', ' ').Replace(',', '.')
                                        </li>
                                        <li>
                                            离子源类型：@string.Join(" ", ionSource).Replace('[', ' ').Replace(']', ' ').Replace(',', '.')
                                        </li>
                                        <li>
                                            检测器类型：@string.Join(" ", detector).Replace('[', ' ').Replace(']', ' ').Replace(',', '.')
                                        </li>
                                    </ol>
                                </td>
                            </tr>
                            <tr>
                                <td colspan="13" class="text-center border border-dark">
                                    使用回顾
                                </td>
                            </tr>
                            <tr>
                                <td class="border border-dark text-nowrap">
                                    评估意见<br />
                                    Comment
                                </td>
                                <td colspan="4" class="border border-dark"></td>
                                <td class="border border-dark text-nowrap">
                                    评估人/日期<br />
                                    Evaluator/Date
                                </td>
                                <td colspan="3" class="border border-dark"></td>
                                <td class="border border-dark text-nowrap">
                                    审批人/日期<br />
                                    Approver/Date
                                </td>
                                <td colspan="3" class="border border-dark"></td>
                            </tr>
                        </tfoot>
                        <tbody class="text-center">
                            @foreach (var item in Model.UsageRecords)
                            {
                                <tr>
                                    <td class="border border-dark align-middle text-nowrap">@(item.BeginTimeOfTest.GetValueOrDefault() == DateTime.MinValue ? "": item.BeginTimeOfTest.GetValueOrDefault().ToString("yyyyMMdd HH:mm"))</td>
                                    <td class="border border-dark align-middle text-nowrap">@(item.EndTime.GetValueOrDefault() == DateTime.MinValue ? "": item.EndTime.GetValueOrDefault().ToString("yyyyMMdd HH:mm"))</td>
                                    <td class="border border-dark align-middle text-break">@item.ProjectName</td>
                                    <td class="border border-dark align-middle text-nowrap">
                                        @(item.ColumnTwoNumber != null ? "S1: " + item.ColumnNumber : item.ColumnNumber)
                                        @(item.ColumnTwoNumber != null ? " | S2: " + item.ColumnTwoNumber : "")
                                        / @GetKeyFromValue(columnType, item.Project.ColumnType)
                                    </td>
                                    <td class="border border-dark align-middle text-nowrap">
                                        @(item.ColumnTwoPressure != null ? "S1: " + item.ColumnPressure : item.ColumnPressure.ToString())
                                        @(item.ColumnTwoPressure != null ? " | S2: " + item.ColumnTwoPressure : "")
                                    </td>
                                    <td class="border border-dark align-middle">@(item.VacuumDegree != null ? item.VacuumDegree : "N/A")</td>
                                    <td class="border border-dark align-middle">@item.BlankSignal</td>
                                    <td class="border border-dark align-middle">@item.TestSignal</td>
                                    <td class="border border-dark align-middle">@GetKeyFromValue(carrier, item.Project.Carrier)</td>
                                    <td class="border border-dark align-middle">@GetKeyFromValue(detector, item.Project.Detector)</td>
                                    <td class="border border-dark align-middle">@GetKeyFromValue(ionSource, item.Project.IonSource)</td>
                                    <td class="border border-dark align-middle text-nowrap">@item.Creator</td>
                                    <td class="border border-dark align-middle text-break" style="max-width:100px">@item.Remark</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                @*维护记录表*@
                <div class="tab-pane" id="maintenance-datagrid" style="position: relative; ">
                    @if (Model.MaintenanceRecords != null)
                    {
                        <button id="exportToPDF" class="btn btn-outline-primary float-right no-print" style="margin-right:10px;" type="button" title="建议在Google Chrome浏览器中进行打印">
                            <i class="fa fa-print"></i> 打印预览
                        </button>
                        var dailyMaintenance = Model.MaintenanceContentAndCycleOfType.GetValueOrDefault("日常维护");
                        var weeklyMaintenance = Model.MaintenanceContentAndCycleOfType.GetValueOrDefault("周维护");
                        var monthlyMaintenance = Model.MaintenanceContentAndCycleOfType.GetValueOrDefault("月度维护");
                        var quarterlyMaintenance = Model.MaintenanceContentAndCycleOfType.GetValueOrDefault("季度维护");
                        var annualMaintenance = Model.MaintenanceContentAndCycleOfType.GetValueOrDefault("年度PM维护");

                        if (dailyMaintenance == null)
                        {
                            @:<h6>未设置日常维护内容</h6>
                        }
                        if (weeklyMaintenance == null)
                        {
                            @:<h6>未设置周维护内容</h6>
                        }
                        if (monthlyMaintenance == null)
                        {
                            @:<h6>未设置月度维护内容</h6>
                        }
                        if (quarterlyMaintenance == null)
                        {
                            @:<h6>未设置季度维护内容</h6>
                        }
                        if (annualMaintenance == null)
                        {
                            @:<h6>未设置年度维护内容</h6>
                        }

                        if (dailyMaintenance != null && weeklyMaintenance != null && monthlyMaintenance != null && quarterlyMaintenance != null && annualMaintenance != null)
                        {
                            var temporary = "临时维护";
                            var totalColSpan = dailyMaintenance.Count + weeklyMaintenance.Count + monthlyMaintenance.Count + quarterlyMaintenance.Count + annualMaintenance.Count + 3;

                            <table id="maintenanceDataGrid" class="table table-sm table-borderless">
                                <thead>
                                    <tr>
                                        <th colspan="@totalColSpan" class="h5 text-center">
                                            @(Model.InstrumentPlatform == "LCMS" ? "液相色谱串联质谱联用仪维护记录表":
                                          Model.InstrumentPlatform == "GCMS" ? "气质联用仪维护记录表" :
                                          Model.InstrumentPlatform == "UPLC" ? "超高效液相色谱仪维护记录表" : "_______________维护记录表")<br />
                                            @(Model.InstrumentPlatform == "LCMS" ? "LC-MS/MS Maintenance Form" :
                                          Model.InstrumentPlatform == "GCMS" ? "GC-MS Maintenance Form" :
                                          Model.InstrumentPlatform == "UPLC" ? "UHPLC Maintenance Form" : "_______________Maintenance Form")
                                        </th>
                                    </tr>
                                    <tr>
                                        <th colspan="@totalColSpan">
                                            <div class="row">
                                                <span class="col-6 text-left text-bold">仪器编号No.：@(Model.Search?.Instrument ?? "_____________")</span>
                                                <span class="col-6 text-right text-bold">表号Form：KM-SOP0314. ___ .02</span>
                                            </div>
                                        </th>
                                    </tr>
                                    <tr class="text-center">

                                        <th class="border border-dark text-break align-middle" colspan="2">
                                            维护类型
                                        </th>
                                        <th class="border border-dark align-middle align-middle" colspan="@dailyMaintenance.Count">
                                            日常维护<br />
                                            Daily
                                        </th>
                                        <th class="border border-dark align-middle" colspan="@weeklyMaintenance.Count">
                                            周维护<br />
                                            Weekly
                                        </th>
                                        <th class="border border-dark align-middle" colspan="@monthlyMaintenance.Count">
                                            月度维护<br />
                                            Monthly
                                        </th>
                                        <th class="border border-dark align-middle" colspan="@quarterlyMaintenance.Count">
                                            季度维护<br />
                                            Quarterly
                                        </th>
                                        <th class="border border-dark align-middle" colspan="@annualMaintenance.Count">
                                            年度PM维护<br />
                                            Annual
                                        </th>
                                        <th class="border border-dark align-middle">
                                            临时维护<br />
                                            Temporary
                                        </th>
                                    </tr>
                                    <tr class="text-center">
                                        <th class="border border-dark text-break align-middle" colspan="2">
                                            维护内容
                                        </th>
                                        @foreach (var item in dailyMaintenance)
                                        {
                                            <td class="border border-dark text-break align-middle">@item.Key</td>
                                        }
                                        @foreach (var item in weeklyMaintenance)
                                        {
                                            <td class="border border-dark text-break align-middle">@item.Key</td>
                                        }
                                        @foreach (var item in monthlyMaintenance)
                                        {
                                            <td class="border border-dark text-break align-middle">@item.Key</td>
                                        }
                                        @foreach (var item in quarterlyMaintenance)
                                        {
                                            <td class="border border-dark text-break align-middle">@item.Key</td>
                                        }
                                        @foreach (var item in annualMaintenance)
                                        {
                                            <td class="border border-dark text-break align-middle">@item.Key</td>
                                        }
                                        <th class="border border-dark"></th>
                                    </tr>
                                    <tr class="text-center">
                                        <th class="border border-dark align-middle">
                                            日<br />
                                            期<br />
                                            Date
                                        </th>
                                        <th class="border border-dark text-break">
                                            维护周期(天)
                                        </th>
                                        @foreach (var item in dailyMaintenance)
                                        {
                                            <td class="border border-dark align-middle">@item.Value</td>
                                        }
                                        @foreach (var item in weeklyMaintenance)
                                        {
                                            <td class="border border-dark align-middle">@item.Value</td>
                                        }
                                        @foreach (var item in monthlyMaintenance)
                                        {
                                            <td class="border border-dark align-middle">@item.Value</td>
                                        }
                                        @foreach (var item in quarterlyMaintenance)
                                        {
                                            <td class="border border-dark align-middle">@item.Value</td>
                                        }
                                        @foreach (var item in annualMaintenance)
                                        {
                                            <td class="border border-dark align-middle">@item.Value</td>
                                        }
                                        <th class="border border-dark"></th>
                                    </tr>
                                </thead>
                                @{
                                    // 维护人员表
                                    var operatorDic = new Dictionary<char, string>();

                                    foreach (var item in Model.MaintenanceRecords)
                                    {
                                        AddKeyValueToDic(operatorDic, item.Operator);
                                    }
                                }
                                <tfoot>
                                    <tr>
                                        <td colspan="@totalColSpan" class="border border-dark">
                                            维护人员：@string.Join(" ", operatorDic).Replace('[', ' ').Replace(']', ' ').Replace(',', '.')
                                            <br />备注：Y：该工作日已完成该项维护；N：经评估，该工作日无需进行该项维护。
                                        </td>
                                    </tr>
                                    <tr>
                                        <td colspan="@totalColSpan" class="text-center border border-dark">
                                            使用回顾
                                        </td>
                                    </tr>
                                    <tr class="text-nowrap text-center">
                                        <td class="border border-dark" colspan="2">
                                            评估意见<br />
                                            Comment
                                        </td>
                                        <td colspan="@(dailyMaintenance.Count + weeklyMaintenance.Count + monthlyMaintenance.Count-2)" class="border border-dark"></td>
                                        <td class="border border-dark" colspan="2">
                                            评估人/日期<br />
                                            Evaluator/Date
                                        </td>
                                        <td colspan="@(quarterlyMaintenance.Count-1)" class="border border-dark"></td>
                                        <td class="border border-dark" colspan="2">
                                            审批人/日期<br />
                                            Approver/Date
                                        </td>
                                        <td colspan="@(annualMaintenance.Count)" class="border border-dark"></td>
                                    </tr>
                                </tfoot>
                                <tbody>
                                    @foreach (var item in Model.MaintenanceRecords)
                                    {
                                        var contents = item.Content.Split(", ");
                                        <tr>
                                            <td class="border border-dark text-nowrap text-center align-middle" colspan="2">@item.EndTime.GetValueOrDefault().ToString("yyyyMMdd")</td>
                                            @foreach (var content in dailyMaintenance)
                                            {
                                                <td class="border border-dark text-center">@(contents.Contains(content.Key) ? "Y/" + GetKeyFromValue(operatorDic, item.Operator) : "N")</td>
                                            }
                                            @foreach (var content in weeklyMaintenance)
                                            {
                                                <td class="border border-dark text-center">@(contents.Contains(content.Key) ? "Y/" + GetKeyFromValue(operatorDic, item.Operator) : "N")</td>
                                            }
                                            @foreach (var content in monthlyMaintenance)
                                            {
                                                <td class="border border-dark text-center">@(contents.Contains(content.Key) ? "Y/" + GetKeyFromValue(operatorDic, item.Operator) : "N")</td>
                                            }
                                            @foreach (var content in quarterlyMaintenance)
                                            {
                                                <td class="border border-dark text-center">@(contents.Contains(content.Key) ? "Y/" + GetKeyFromValue(operatorDic, item.Operator) : "N")</td>
                                            }
                                            @foreach (var content in annualMaintenance)
                                            {
                                                <td class="border border-dark text-center">@(contents.Contains(content.Key) ? "Y/" + GetKeyFromValue(operatorDic, item.Operator) : "N")</td>
                                            }
                                            <td class="border border-dark text-break text-center">
                                                @if (item.Type == temporary)
                                                {
                                                    @item.Content
                                                }
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
}


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <link href="~/plugins/datatables-buttons/css/buttons.bootstrap4.min.css" rel="stylesheet" />
    <script src="~/plugins/datatables-buttons/js/dataTables.buttons.min.js"></script>
    <script src="~/plugins/datatables-buttons/js/buttons.bootstrap4.min.js"></script>
    <script src="~/plugins/jszip/jszip.min.js"></script>
    <script src="~/plugins/datatables-buttons/js/buttons.html5.min.js"></script>
    <script src="~/plugins/datatables-buttons/js/buttons.print.min.js"></script>
    <script src="~/plugins/chart.js/Chart.bundle.min.js"></script>
    <script>
        $(document).ready(function () {
            $("button#exportToPDF").click(function () {
                window.print();
            })
        });

        $(document).ready(function () {
            @{
                double timeSpan = 0;
                double totalTime = 0;
                var instrument = new Dictionary<string, Dictionary<string, Dictionary<string, double>>>();
                if (Model.UsageRecords != null)
                {
                    foreach (var item in Model.UsageRecords)
                    {
                        timeSpan = Math.Round((item.EndTime - item.BeginTimeOfTest).GetValueOrDefault().TotalHours,1);
                        totalTime += timeSpan;

                        if(!instrument.ContainsKey(item.InstrumentId))
                        {
                            instrument.Add(item.InstrumentId, new Dictionary<string, Dictionary<string, double>>() { });
                        }

                        var project = instrument[item.InstrumentId];
                        if(!project.ContainsKey(item.ProjectName))
                        {
                            project.Add(item.ProjectName, new Dictionary<string, double>() { });
                        }

                        var beginTime = item.BeginTimeOfTest.GetValueOrDefault().ToShortDateString();
                        var day = project[item.ProjectName];
                        if(!day.ContainsKey(beginTime))
                        {
                            day.Add(beginTime, timeSpan);
                        }
                    }
                }
            }
            // chartjs
            var div = document.getElementById('data-chart');
            if (!div) return;

            let instruments = @(Json.Serialize(instrument));
            if (Object.keys(instruments).length == 0) {
                div.innerHTML = "<p>未查询到数据！</p>";
                return;
            }

            for (let num in instruments) {
                for (let project in instruments[num]) {
                    var canvas = document.createElement("canvas");
                    var br = document.createElement("br");

                    canvas.height = "275";
                    canvas.width = "900";

                    div.appendChild(canvas);
                    canvas.append("<p>当前浏览器不支持查看该元素！</p>");
                    div.appendChild(br);

                    var ctx = canvas.getContext('2d');
                    var chart = new Chart(ctx, {
                    // The type of chart we want to create
                    type: 'bar',

                    // The data for our dataset
                    data: {
                        labels: Object.keys(instruments[num][project]),
                        datasets: [{
                            label: num + "  " + project + '  使用时长',
                            backgroundColor: 'rgb(65, 105, 225)',
                            borderColor: 'rgb(65, 105, 225)',
                            data: Object.values(instruments[num][project]),
                        }]
                        },
                        // Configuration options go here
                        options: {
                            scales: {
                                xAxes: [{
                                    type: 'time',
                                    time: {
                                        unit: "day",
                                        displayFormats: {
                                            day: "YYYY-MM-DD"
                                        }
                                    },
                                }],
                                yAxes: [{
                                    ticks: {
                                        max: 24,
                                        beginAtZero: false
                                    },
                                    scaleLabel: {
                                        display: true,
                                        labelString: "小时",
                                    }
                                }]
                            }
                        }
                    });
                }
            };
        });

        $(document).ready(function () {
            // 动态生成检测项目
            $("select#group").on("change", function () {
                var group = $(this).val();
                $("select#project").removeAttr("disabled");
                $("select#project").empty();
                $("select#project").append("<option value=''>---请选择---</option>");
                $.getJSON(`?handler=ProjectFilter&group=${group}`, (data) => {
                    if (data.length > 0) {
                        $.each(data, function (i, item) {
                            $("select#project").append(`<option value='${item}'>${item}</option>`);
                        });
                    }
                    else {
                        $("select#project").empty();
                        $("select#project").append("<option value=''>无可选项目</option>");
                    }
                });
            });

            // 动态生成设备编号
            $("select#project").on("change", function () {
                var project = $(this).val();
                $("select#instrument").removeAttr("disabled");
                $("select#instrument").empty();
                $("select#instrument").append("<option value=''>---请选择---</option>");
                $.getJSON(`?handler=InstrumentFilter&projectName=${project}`, (data) => {
                    if (data.length > 0) {
                        $.each(data, function (i, item) {
                            $("select#instrument").append(`<option value='${item}'>${item}</option>`);
                        });
                    }
                    else {
                        $("select#instrument").empty();
                        $("select#instrument").append("<option value=''>无可选设备</option>");
                    }
                });
            });

            $('table#export').DataTable({
                dom: "irtpB",
                language: {
                    "emptyTable": "没有数据", //没有数据时要显示的字符串
                    "info": "当前 _START_ 条到 _END_ 条 共 _TOTAL_ 条",//左下角的信息，变量可以自定义，到官网详细查看
                    "infoEmpty": "无记录",//当没有数据时，左下角的信息
                    "infoFiltered": "(从 _MAX_ 条记录过滤)",//当表格过滤的时候，将此字符串附加到主要信息
                    "infoPostFix": "",//在摘要信息后继续追加的字符串
                    "thousands": ",",//千分位分隔符
                    "lengthMenu": "每页 _MENU_ 条记录",//用来描述分页长度选项的字符串
                    "loadingRecords": "加载中...",//用来描述数据在加载中等待的提示字符串 - 当异步读取数据的时候显示
                    "processing": "处理中...",//用来描述加载进度的字符串
                    "search": "搜索：",//用来描述搜索输入框的字符串
                    "zeroRecords": "没有找到",//当没有搜索到结果时，显示
                    "paginate": {
                        "first": "首页",
                        "previous": "上一页",
                        "next": "下一页",
                        "last": "尾页"
                    }
                },
                buttons: [{
                    extend: 'excel',
                    text: '导出',
                    footer: true,
                    filename: "@(Model.Search.Category)-@(Model.Search?.BeginTime.ToShortDateString())_@(Model.Search?.EndTime.ToShortDateString())"
                }]
            });

            // 计算总时长
            $("td#total").text(@totalTime.ToString("f1"));
        });
    </script>
}

@*@if (Model.MalfunctionWorkOrders != null)
    {
        <table id="export" class="table table-hover text-nowrap">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.MalfunctionWorkOrders[0].InstrumentID)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.MalfunctionWorkOrders[0].MalfunctionInfo.Part)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.MalfunctionWorkOrders[0].MalfunctionInfo.Phenomenon)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.MalfunctionWorkOrders[0].MalfunctionInfo.BeginTime)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.MalfunctionWorkOrders[0].MalfunctionInfo.FoundedTime)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.MalfunctionWorkOrders[0].RepairRequest.RequestTime)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.MalfunctionWorkOrders[0].Maintenance.BeginTime)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.MalfunctionWorkOrders[0].Validation.FinishedTime)
                    </th>
                    <th>维修耗时(h)</th>
                    <th>故障时长(h)</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.MalfunctionWorkOrders)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.InstrumentID)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.MalfunctionInfo.Part)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.MalfunctionInfo.Phenomenon)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.MalfunctionInfo.BeginTime)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.MalfunctionInfo.FoundedTime)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.RepairRequest.RequestTime)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Maintenance.BeginTime)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Validation.FinishedTime)
                        </td>
                        <td>@((item.Maintenance.EndTime - item.Maintenance.BeginTime).GetValueOrDefault().TotalHours.ToString("f1"))</td>
                        <td class="time">@((item.Validation.FinishedTime - item.MalfunctionInfo.BeginTime).GetValueOrDefault().TotalHours.ToString("f1"))</td>
                    </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <td class="text-bold">总时长(h)</td>
                    <td id="total" class="text-bold"></td>
                </tr>
            </tfoot>
        </table>
    }*@
